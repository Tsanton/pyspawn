---
parameters:
- name: composeArgs
  type: string


steps:
  - task: DockerCompose@0
    displayName: Run tests
    inputs:
      containerregistrytype: Container Registry
      action: Run a Docker Compose command
      dockerComposeFile: docker-compose.yaml
      additionalDockerComposeFiles: docker-compose.testing.azure.yaml
      serviceName: ${{ parameters.composeServiceName }}
      dockerComposeCommand: run --rm pyspawn
      dockerComposeFileArgs: ${{ parameters.composeArgs }}
      qualifyImageNames: true

  - task: PublishTestResults@2
    displayName: "Publish test results"
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: "**/xunit-result-all.xml"

  - task: PublishCodeCoverageResults@1
    displayName: "Publish coverage reports"
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage-reports/coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/coverage-reports/"